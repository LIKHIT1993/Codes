import java.util.LinkedHashMap;
import java.util.Map;

public class FindFirstNonRepeatedCharacter {
    public static char findFirstNonRepeatedCharacter(String str) {
        // Create a LinkedHashMap to maintain the insertion order
        Map<Character, Integer> charCounts = new LinkedHashMap<>();

        // Count occurrences of each character in the string
        for (char c : str.toCharArray()) {
            charCounts.put(c, charCounts.getOrDefault(c, 0) + 1);
        }

        // Iterate through the map and find the first non-repeated character
        for (Map.Entry<Character, Integer> entry : charCounts.entrySet()) {
            if (entry.getValue() == 1) {
                return entry.getKey();
            }
        }

        // If there is no non-repeated character, return null or throw an exception
        // Here, we return a space character if no non-repeated character is found
        return ' ';
    }

    public static void main(String[] args) {
        String input = "abaccddeeff";
        char firstNonRepeatedChar = findFirstNonRepeatedCharacter(input);
        if (firstNonRepeatedChar != ' ') {
            System.out.println("First non-repeated character: " + firstNonRepeatedChar);
        } else {
            System.out.println("No non-repeated character found in the string.");
        }
    }
}
